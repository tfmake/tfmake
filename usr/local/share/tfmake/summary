#!/usr/bin/env bash

set -u

# shellcheck source=/dev/null
{
  source "${TFMAKE_SCRIPT_DIR}/../include/tfmake/util.sh"
  source "${TFMAKE_SCRIPT_DIR}/../include/tfmake/store.sh"
}

function usage() {
  cat << EOF
Usage:
  tfmake summary [options]

  This command create a Markdown summary.

Options:
  -h, --help, help  Show this help output.
EOF
  exit
}

case "${1-}" in
  -h|--help|help)
    usage
    ;;
  ?*)
    printf ">>> Unknown option: %s\n\n" "${1}"
    usage
    ;;
esac

readonly TFMAKE_SUMMARY_TITLE="${TFMAKE_SUMMARY_TITLE:-"${TFMAKE_CONTEXT^}"}"

SUMMARY_FILE="${TFMAKE_DATA_DIR}/${TFMAKE_CONTEXT}/outputs/summary.md"
BREADCRUMBS_FILE="${TFMAKE_DATA_DIR}/${TFMAKE_CONTEXT}/outputs/breadcrumbs"

# validations
util::file_exist_condition \
  "${TFMAKE_DATA_DIR}/${TFMAKE_CONTEXT}/store/visited/keys" \
  "tfmake run"

# subcommand
function breadcrumb() {
  local section="${1-}"

  bytes=$(wc -c "${SUMMARY_FILE}" | awk '{print $1}')

  printf "%s\t%d\n" "${section}" "${bytes}" >> "${BREADCRUMBS_FILE}"
}

truncate -s 0 "${SUMMARY_FILE}" "${BREADCRUMBS_FILE}"

# title
if [[ -n "${TFMAKE_SUMMARY_TITLE}" ]]; then
  echo "### ${TFMAKE_SUMMARY_TITLE}" > "${SUMMARY_FILE}"
  util::append_new_line "${SUMMARY_FILE}"

  breadcrumb "title"
fi

# outputs
store::basepath "${TFMAKE_DATA_DIR}/${TFMAKE_CONTEXT}/store"

store::use visited
nodes=$(kv::keys)

for node in ${nodes}; do
  icon=":white_check_mark:"

  result=$(kv::get "$node")
  if [[ "$result" == "false" ]]; then
    icon=":x:"
  fi

  cat >> "${SUMMARY_FILE}" << EOF
<details>
<summary>Module <strong>"${node}"</strong> ${icon}</summary>

${BACKTICKS}
$(cat "${TFMAKE_DATA_DIR}/${TFMAKE_CONTEXT}/logs/${node}/init.log")

--------------------------------------------------------------------------------

$(cat "${TFMAKE_DATA_DIR}/${TFMAKE_CONTEXT}/logs/${node}/${TFMAKE_CONTEXT}.log")
${BACKTICKS}

</details>
EOF

  breadcrumb "module"
done
