#!/usr/bin/env bash

set -u

tab=$(printf '\t')

# shellcheck source=/dev/null
{
  source "${TFMAKE_SCRIPT_DIR}/../include/tfmake/util.sh"
  source "${TFMAKE_SCRIPT_DIR}/../include/tfmake/store.sh"
}

util::file_exist_condition \
  "${TFMAKE_DATA_DIR}/apply/store/dependencies/keys" \
  "tfmake init"

store::basepath "${TFMAKE_DATA_DIR}/apply/store"

store::use modules
modules=$(kv::keys)

cat > "${TFMAKE_DATA_DIR}/apply/Makefile" << EOF
SHELL=$(which bash) -o pipefail

all: $(util::splitlines "${modules}")
EOF

store::use dependencies
for module in ${modules}; do
  deps=$(kv::get "${module}")
  [[ -n ${deps} ]] && deps=${deps//,/ }

  util::append_new_line "${TFMAKE_DATA_DIR}/apply/Makefile"

  cat >> "${TFMAKE_DATA_DIR}/apply/Makefile" << EOF
${module}: \$(wildcard ${module}/*.tf ${module}/*.tfvars) ${deps}
${tab}@mkdir -p "${TFMAKE_DATA_DIR}/apply/logs/${module}"
${tab}@echo "${module}" >> "${TFMAKE_DATA_DIR}/apply/outputs/visited"
${tab}terraform -chdir="${module}" init -no-color 2>&1 | tee "${TFMAKE_DATA_DIR}/apply/logs/${module}/init.log"
${tab}terraform -chdir="${module}" apply -auto-approve -no-color 2>&1 | tee "${TFMAKE_DATA_DIR}/apply/logs/${module}/apply.log"
EOF
done
