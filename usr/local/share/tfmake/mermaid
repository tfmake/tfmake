#!/usr/bin/env bash

set -u

# shellcheck source=/dev/null
{
  source "${TFMAKE_SCRIPT_DIR}/../include/tfmake/util.sh"
  source "${TFMAKE_SCRIPT_DIR}/../include/tfmake/store.sh"
}

CLASS_DEF_DEFAULT=${CLASS_DEF_DEFAULT:-"fill:#ffffff,stroke:#585c5e,color:#585c5e;"}
CLASS_DEF_SUCCEEDED=${CLASS_DEF_SUCCEEDED:-"fill:#a3cfbb,stroke:#136c44,color:#136c44;"}
CLASS_DEF_FAILED=${CLASS_DEF_FAILED:-"fill:#f0aeb5,stroke:#af2a36,color:#af2a36;"}

function usage() {
  cat << EOF
Usage:
  tfmake mermaid [options]

  This command generate a Mermaid flowchart diagram from modules and their dependencies.

Options:
  -h, --help, help  Show this help output.
EOF
  exit
}

case "${1-}" in
-h|--help|help)
  usage
  ;;
?*)
  printf ">>> Unknown option: %s\n\n" "${1}"
  usage
  ;;
esac

# validations
util::file_exist_condition \
  "${TFMAKE_DATA_DIR}/${TFMAKE_CONTEXT}/store/visited/keys" \
  "tfmake run"

# subcommand
MERMAID_FILE="${TFMAKE_DATA_DIR}/${TFMAKE_CONTEXT}/outputs/mermaid.md"

cat > "${MERMAID_FILE}" << EOF
flowchart TB

classDef default ${CLASS_DEF_DEFAULT}
classDef succeeded ${CLASS_DEF_SUCCEEDED}
classDef failed ${CLASS_DEF_FAILED}
EOF

util::append_new_line "${MERMAID_FILE}"

store::basepath "${TFMAKE_DATA_DIR}/${TFMAKE_CONTEXT}/store"

store::use modules
modules=$(kv::keys)

store::use dependencies
for module in ${modules}; do
  echo "${module}($module)" >> "${MERMAID_FILE}"

  deps=$(kv::get "${module}")

  if [[ -n ${deps} ]]; then
    deps=${deps//,/ }
  fi

  for dep in ${deps}; do
    echo "${dep} --> ${module}" >> "${MERMAID_FILE}"
  done
done

util::append_new_line "${MERMAID_FILE}"

store::use visited
nodes=$(kv::keys)

for node in ${nodes}; do
  result=$(kv::get "$node")

  if [[ "$result" == "true" ]]; then
    echo "${node}:::succeeded" >> "${MERMAID_FILE}"
  else
    echo "${node}:::failed" >> "${MERMAID_FILE}"
  fi
done
