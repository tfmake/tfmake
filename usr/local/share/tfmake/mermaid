#!/usr/bin/env bash

set -u

# shellcheck source=/dev/null
{
  source "${SCRIPT_DIR}/../include/tfmake/utils.sh"
  source "${SCRIPT_DIR}/../include/tfmake/store.sh"
}

CLASS_DEF_DEFAULT=${CLASS_DEF_DEFAULT:-"fill:#FFFFFF,stroke:#808080,stroke-width:2px,color:#808080;"}
CLASS_DEF_SUCCEEDED=${CLASS_DEF_SUCCEEDED:-"fill:#BEEC97,stroke:#9BDA67,color:#40800B;"}
CLASS_DEF_FAILED=${CLASS_DEF_FAILED:-"fill:#FFA3A3,stroke:#F57373,color:#D1464A;"}

function usage() {
  cat << EOF
Usage:
  tfmake mermaid [options]

  This command generate a Mermaid flowchart diagram from modules and their dependencies.

Options:
  -h, --help        Show this help output.
  --plan            Use the outputs from 'tfmake plan'.
  --apply           Use the outputs from 'tfmake apply'.
EOF
  exit
}

target=""
option="${1-}"
shift

case "${option}" in
-h|--help)
  usage
  ;;
--plan|--apply)
  target="${option:2}"
  ;;
*)
  usage
  ;;
esac

file::exist_condition \
  "${DATA_DIR}/${target}/store/visited/keys" \
  "tfmake ${target}"

MERMAID_FILE="${DATA_DIR}/${target}/outputs/mermaid.md"

cat > "${MERMAID_FILE}" << EOF
flowchart TB

classDef default ${CLASS_DEF_DEFAULT}
classDef succeeded ${CLASS_DEF_SUCCEEDED}
classDef failed ${CLASS_DEF_FAILED}
EOF

file::new_line "${MERMAID_FILE}"

store::basepath "${DATA_DIR}/${target}/store"

modules=$(kv::keys modules)
for module in ${modules}; do
  echo "${module}($module)" >> "${MERMAID_FILE}"

  deps=$(kv::get dependencies "${module}")

  if [[ -n ${deps} ]]; then
    deps=${deps//,/ }
  fi

  for dep in ${deps}; do
    echo "${dep} --> ${module}" >> "${MERMAID_FILE}"
  done
done

file::new_line "${MERMAID_FILE}"

nodes=$(kv::keys visited)
for node in ${nodes}; do
  result=$(kv::get visited "$node")

  if [[ "$result" == "true" ]]; then
    echo "${node}:::succeeded" >> "${MERMAID_FILE}"
  else
    echo "${node}:::failed" >> "${MERMAID_FILE}"
  fi
done
