#!/usr/bin/env bash

set -u

# shellcheck source=/dev/null
{
  source "${SCRIPT_DIR}/../include/tfmake/utils.sh"
  source "${SCRIPT_DIR}/../include/tfmake/store.sh"
}

function usage() {
  cat << EOF
Usage:
  tfmake touch [options]

  This command touch modified files.

Options:
  -h, --help, help  Show this help output.
  -f, --files       List of files to touch.
EOF
  exit
}

[[ $# -eq 0 ]] && usage

files=""
sep=""

while :; do
  case "${1-}" in
  -h|--help|help)
    usage
    ;;
  -f|--files)
    files+="${sep}${2-}"
    sep=" "
    shift
    ;;
  ?*)
    printf ">>> Unknown option: %s\n\n" "${1}"
    usage
    ;;
  *)
    break
    ;;
  esac
  shift
done

# validations
file::exist_condition \
  "${DATA_DIR}/${TFMAKE_CONTEXT}/store/modules/keys" \
  "tfmake init"

if [[ -z ${files} ]]; then
  printf ">>> No files, anything to do.\n"
fi

# subcommand
store::basepath "${DATA_DIR}/${TFMAKE_CONTEXT}/store"
store::use modules

modules=$(utils::splitlines "$(kv::keys)")

# Set the same time in all directories before touch individual files.
mtime=$(date +%Y%m%d%H%M.%S)
# shellcheck disable=SC2086
touch -c -m -t "${mtime}" ${modules}

# Wait one second, so the next calls to 'touch' use a different time.
sleep 1

store::truncate modified
for file in ${files}; do
  if [[ ! -f ${file} && ! -d ${file} ]]; then
    printf ">>> %s: No such file or directory.\n" "${file}"
    continue
  fi

  printf ">>> touch: %s\n" "${file}"
  touch -c -m "${file}"

  kv::set "${file}" true
done
