#!/usr/bin/env bash

# shellcheck source=/dev/null
source "${SCRIPT_DIR}/../include/tfmake/utils.sh"
source "${SCRIPT_DIR}/../include/tfmake/store.sh"

function usage() {
  cat << EOF
Usage:
  tfmake init [options]

  This command initialize the data directory for Terraform plan or apply execution.

Options:
  --help            Show this help output.
  --plan            Initialize the data directory for 'terraform plan' execution.
  --apply           Initialize the data directory for 'terraform aply' execution.
EOF
  exit
}

target=""
option="${1}"
shift

case "${option}" in
help|--help)
  usage
  ;;
--plan|--apply)
  target="${option:2}"
  ;;
*)
  usage
  ;;
esac

mkdir -p "${DATA_DIR}/${target}/logs"
mkdir -p "${DATA_DIR}/${target}/outputs"
mkdir -p "${DATA_DIR}/${target}/store"

store::basepath "${DATA_DIR}/${target}/store"

store::kv modules
while IFS= read -r -d '' file; do
  kv::set "$(dirname "${file}")" true
done <  <(find -- * -name main.tf -type f -print0)

store::kv dependencies
while IFS= read -r -d '' file; do
  module=$(dirname "${file}")

  deps=$(yq -o=csv ".dependencies" "${file}")
  if [[ -n ${deps} ]]; then
    kv::set "${module}" "${deps}"
  fi
done <  <(find -- * -name .tfmake -type f -print0)

modules="$(utils::splitlines "$(kv::keys modules)")"

# shellcheck disable=SC2086

# Changing only the modification time with '-m' ensure that the same time is used
# for all directories. Otherwise NULL is passed to 'utimensat',
# setting the current time for each one.
touch -c -m ${modules}

# Ensure that the call to 'tfmake touch ${FILES}' will not use the same time.
sleep 1
