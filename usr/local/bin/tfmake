#!/usr/bin/env bash

set -Eeuo pipefail

VERSION="0.1.0"

SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)
export SCRIPT_DIR

function usage() {
  cat << EOF
Usage:
  tfmake command [options] [args]

Available Commands:
  apply             Execute the apply Makefile.
  cleanup           Cleanup the data directory.
  config            Modify tfmake configuration.
  gh-pr-comment     Add a comment to a GitHub pull request.
  gh-step-summary   Add content to GitHub Step Summary.
  init              Initialize the data directory for Terraform plan or apply execution.
  makefile          Generate a Makefile for Terraform plan or apply execution.
  mermaid           Generate a Mermaid flowchart diagram from Terraform modules and their dependencies.
  plan              Execute the plan Makefile.
  summary           Create a Markdown summary.
  touch             Touch modified files.
  version           Show the current version.

Other options:
  -h, --help, help  Print this help and exit.
  -v, --version     An alias for the "version" subcommand.
EOF
  exit
}

[[ $# -eq 0 ]] && usage

CMD="${1-}"
shift

case "${CMD}" in
-h|--help|help)
  usage
  ;;
-v|--version|version)
  echo "tfmake v${VERSION}"
  exit
  ;;
apply|cleanup|config|gh-pr-comment|gh-step-summary|mermaid|init|plan|summary|touch)
  ;;
makefile)
  tmp="${CMD}-help"

  if [[ "${1-}" == "--plan" || "${1-}" == "--apply" ]]; then
    tmp="${CMD}-${1:2}"
    shift
  fi

  CMD="${tmp}"
  ;;
*)
  usage
  ;;
esac

SCRIPT_PATH="${SCRIPT_DIR}/../share/tfmake/${CMD}"

exec "bash" "${SCRIPT_PATH}" "$@"
